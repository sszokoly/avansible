---
- name: Setting ansible_ssh_common_args when ssh_proxy is defined
  set_fact:
    ansible_ssh_common_args: "{{ ssh_args }}"
  when: ssh_proxy is defined

- name: Obtaining `swversion` of {{ inventory_hostname }}
  shell: "/opt/mvap/bin/swversion"
  register: swversion_output

- name: Setting 'swversion' fact for {{ inventory_hostname }}
  set_fact:
    swversion: "{{ swversion_output.stdout }}"
    cacheable: yes

- name: Obtaining `EASGStatus` of {{ inventory_hostname }}
  shell: "/usr/bin/EASGStatus"
  register: EASGStatus_output

- name: Setting 'EASGStatus' fact for {{ inventory_hostname }}
  set_fact:
    EASGStatus: "{{ EASGStatus_output.stdout }}"
    cacheable: yes

- name: Obtaining `scheduleRemoteBackUp status` of {{ inventory_hostname }}
  become: yes
  shell: "/opt/mvap/bin/scheduleRemoteBackUp status"
  register: backup_status_output
  when: ansible_become_pass is defined

- name: Setting 'backup_status' fact for {{ inventory_hostname }}
  set_fact:
    backup_status: "{{ backup_status_output.stdout }}"
    cacheable: yes
  when: ansible_become_pass is defined

- name: Obtaining `/opt/mvap/bin/mvap.sh info` from {{ inventory_hostname }}
  shell: "/opt/mvap/bin/mvap.sh info"
  register: mvap_info_output

- name: Setting 'mvap_info' fact for {{ inventory_hostname }}
  set_fact:
    mvap_info: "{{ mvap_info_output.stdout }}"
    cacheable: yes

- name: Obtaining `grep O_A /var/log/avaya/aes/alarm.log | tail` from {{ inventory_hostname }}
  shell: "grep O_A /var/log/avaya/aes/alarm.log | tail"
  register: alarms_output

- name: Setting 'alarms' fact for {{ inventory_hostname }}
  set_fact:
    alarms: "{{ alarms_output }}"
    cacheable: yes

- name: Obtaining certificates of {{ inventory_hostname }}
  get_certs:
    name: "{{ item.name }}"
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    starttls: "{{ item.starttls }}"
  with_items:
    - { name: "web", host: "{{ ansible_host }}", port: 443 , starttls: "" }
  register: get_certs_output

- name: Setting 'certificates' fact for {{ inventory_hostname }}
  set_fact:
    certificates: "{{ certificates | default({}) | combine({ item.1: get_certs_output.results[item.0][item.1] }) }}"
    cacheable: yes
  with_indexed_items:
    - "web"
...