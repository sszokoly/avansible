---
- name: Setting ansible_ssh_common_args when ssh_proxy is defined
  set_fact:
    ansible_ssh_common_args: "{{ ssh_args }}"
  when: ssh_proxy is defined
  tags:
  - ssh_proxy

- name: Setting 'group_names' fact for {{ inventory_hostname }}
  set_fact:
    group_names: "{{ group_names }}"
    cacheable: yes

- name: Obtaining `vmware -l` from {{ inventory_hostname }}
  shell: "/bin/vmware -l"
  retries: 3
  delay: 30
  register: vmware_level_output
  tags:
  - swversion

- name: Setting 'swversion' fact for {{ inventory_hostname }}
  set_fact:
    swversion: "{{ vmware_level_output.stdout }}"
    cacheable: yes
  tags:
  - swversion

- name: Obtaining `vmware -v` from {{ inventory_hostname }}
  shell: "/bin/vmware -v"
  register: vmware_version_output
  tags:
  - swversion

- name: Setting 'vmware_version' fact for {{ inventory_hostname }}
  set_fact:
    swversion: "{{ swversion + '\n' + vmware_version_output }}"
    cacheable: yes
  tags:
  - swversion

- name: Obtaining vmmare license key from {{ inventory_hostname }}
  shell: "vim-cmd vimsvc/license --show | grep serial:"
  register: vmware_license_key_output
  tags:
  - licenses

- name: Setting 'vmware_license_key' fact for {{ inventory_hostname }}
  vars:
    vmware_license_key_regex: "serial: ([^ ]+)"
    vmware_license_key_res: "{{ vmware_license_key_output.stdout | regex_search(vmware_license_key_regex, '\\1') }}"
  set_fact:
    vmware_license_key: "{{ vmware_license_key_res | first }}"
    cacheable: yes
  tags:
  - licenses

- name: Obtaining certificates from {{ inventory_hostname }}
  get_certs:
    name: "{{ item.name }}"
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    starttls: "{{ item.starttls }}"
  with_items:
    - { name: "web", host: "{{ ansible_host }}", port: 443 , starttls: "" }
  register: get_certs_output
  tags:
  - certificates

- name: Setting 'certificates' fact for {{ inventory_hostname }}
  set_fact:
    certificates: "{{ certificates | default({}) | combine({ item.1: get_certs_output.results[item.0][item.1] }) }}"
    cacheable: yes
  with_indexed_items:
    - "web"
  tags:
  - certificates
...