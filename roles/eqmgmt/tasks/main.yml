---
- name: Setting ansible_ssh_common_args when ssh_proxy is defined
  set_fact:
    ansible_ssh_common_args: "{{ ssh_args }}"
  when: ssh_proxy is defined
  tags:
  - ssh_proxy

- name: Obtaining `swversion -s` from {{ inventory_hostname }}
  become: yes
  shell: "/opt/avaya/pmgr/current/Bin/swversion -s"
  register: swversion_output
  tags:
  - swversion

- name: Setting 'swversion' fact for {{ inventory_hostname }}
  set_fact:
    swversion: "{{ swversion_output.stdout }}"
    cacheable: yes
  tags:
  - swversion

- name: Obtaining `EASGStatus` from {{ inventory_hostname }}
  shell: "echo $(/usr/bin/EASGStatus)"
  register: EASGStatus_output
  tags:
  - easg

- name: Setting 'EASGStatus' fact for {{ inventory_hostname }}
  set_fact:
    EASGStatus: "{{ EASGStatus_output.stdout }}"
    cacheable: yes
  tags:
  - easg

- name: Obtaining backup config from {{ inventory_hostname }}
  shell: "grep 'autoBackup' /opt/avaya/iview/tomcat/config/vcs-core.properties"
  register: iview_backup_config_output
  tags:
  - backup

- name: Setting 'backup' fact for {{ inventory_hostname }}
  set_fact:
    backup: "{{ backup | default({}) | combine({ 'config': iview_backup_config_output.stdout }) }}"
    cacheable: yes
  when: iview_backup_config_output is defined and iview_backup_config_output.stdout != ""
  tags:
  - backup

- name: Obtaining backup history from {{ inventory_hostname }}
  shell: "ls -tr /var/avaya/log/iview/server.log* | xargs grep 'Uploaded file' | tail -n1"
  register: iview_backup_history_output
  tags:
  - backup

- name: Updating 'backup' fact for {{ inventory_hostname }}
  set_fact:
    backup: "{{ backup | default({}) | combine({ 'history': iview_backup_history_output.stdout }) }}"
    cacheable: yes
  when: iview_backup_history_output is defined and iview_backup_history_output.stdout != ""
  tags:
  - backup

- name: Obtaining certificates from {{ inventory_hostname }}
  get_certs:
    name: "{{ item.name }}"
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    starttls: "{{ item.starttls }}"
  with_items:
    - { name: "web", host: "{{ ansible_host }}", port: 443, starttls: "" }
  register: get_certs_output
  tags:
  - certificates

- name: Setting 'certificates' fact for {{ inventory_hostname }}
  set_fact:
    certificates: "{{ certificates | default({}) | combine({ item.1: get_certs_output.results[item.0][item.1] }) }}"
    cacheable: yes
  with_indexed_items:
    - "web"
  tags:
  - certificates
...