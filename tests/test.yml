---
-
  hosts: sd36smgr1
  gather_facts: True

  tasks:
    - name: Obtaining `swversion` for {{ inventory_hostname }}
      shell: sh /opt/Avaya/vsp/swversion.sh
      register: swversion_output

    - name: Obtaining `logname` for {{ inventory_hostname }}
      shell: logname
      register: logname_output

    - name: Obtaining `chage -l {{ logname_output.stdout }}` for {{ inventory_hostname }}
      shell: chage -l `logname`
      register: chage_output

    - name: Obtaining `vmware-toolbox-cmd stat cpures` for {{ inventory_hostname }}
      shell: vmware-toolbox-cmd stat cpures
      register: cpures_output

    - name: Obtaining `vmware-toolbox-cmd stat memres` for {{ inventory_hostname }}
      shell: vmware-toolbox-cmd stat memres
      register: memres_output

    - name: Obtaining 'container_tls' certificate for {{ inventory_hostname }}
      get_certs:
        name: container_tls
        host: "{{ ansible_host }}"
      register: container_tls_certs

    - name: Setting 'swversion' fact for {{ inventory_hostname }}
      set_fact:
        swversion: "{{ swversion_output.stdout }}"
        cacheable: yes

    - name: Setting 'chage' fact for {{ inventory_hostname }}
      vars:
        chage: {}
      set_fact:
        chage: "{{ chage | combine({item.key: item.value}) }}"
        cacheable: yes
      with_items:
      - { key: "{{ logname_output.stdout }}", value: "{{ chage_output.stdout }}" }

    - name: Setting up 'stat' dictionary for {{ inventory_hostname }}
      vars:
        vmware_stat: {}
      set_fact:
        vmware_stat: "{{ vmware_stat | combine({item.key: item.value}) }}"
      with_items:
      - { key: 'cpures', value: "{{ cpures_output.stdout }}" }
      - { key: 'memres', value: "{{ memres_output.stdout }}" }

    - name: Setting 'vmware_toolbox_cmd' fact for {{ inventory_hostname }}
      set_fact:
        vmware_toolbox_cmd: { 'stat': "{{ vmware_stat }}" }
        cacheable: yes

    - name: Setting 'certificates' fact for {{ inventory_hostname }}
      set_fact:
        certificates: "{{ container_tls_certs }}" 
        cacheable: yes
...