---
- name: Setting ansible_ssh_common_args when ssh_proxy is defined
  set_fact:
    ansible_ssh_common_args: "{{ ssh_args }}"
  when: ssh_proxy is defined

- name: Obtaining SM `swversion` output
  vars:
    cmd: "sudo /opt/Avaya/bin/swversion"
  shell: "{{ cmd }}"
  timeout: "{{ timeout }}"
  register: result
  tags:
    - SM

- name: Extracting SM 'Call Processing' version
  vars:
    appsp_regex: ".*Call Processing: ([^ \n]+)"
    appsp_res: "{{ result.stdout | regex_search(appsp_regex, '\\1') }}"
  set_fact:
    appsp: "{{ appsp_res | first }}"
  when: (appsp_res | length >= 1) and (result is defined)
  delegate_to: localhost
  tags:
    - SM

- name: Extracting SM SSP version
  vars:
    ssp_regex: "\n.*(SSP[^ ]+).*installed Security Service Pack.*"
    ssp_res: "{{ result.stdout | regex_search(ssp_regex, '\\1') }}"
  set_fact:
    ssp: "{{ ssp_res | first }}"
  tags:
    - SM

- name: Writing SM latest versions to '{{ swversion_stdout }}'
  lineinfile:
    line: "SESSION MANAGER,Latest,SM,,{{ latest_sm_appsp | default('') }},,{{ latest_sm_ssp | default('') }},"
    insertafter: EOF
    dest: "{{ swversion_stdout }}"
  delegate_to: localhost
  tags:
    - SM

- name: Writing SM extracted versions to '{{ swversion_stdout }}'
  vars:
    pgrp: "{{ group_names | first | default('') }}"
    cgrp: "{{ group_names | last | default('') }}"
    syssp: ""
    ksp: ""
  lineinfile:
    line: "{{ inventory_hostname }},{{ ansible_host }},{{ pgrp }},{{ cgrp }},{{ appsp }},{{ syssp }},{{ ssp }},{{ ksp }}"
    insertafter: EOF
    dest: "{{ swversion_stdout }}"
  delegate_to: localhost
  tags:
    - SM

- name: Resetting SSH connection
  ansible.builtin.meta: reset_connection
...